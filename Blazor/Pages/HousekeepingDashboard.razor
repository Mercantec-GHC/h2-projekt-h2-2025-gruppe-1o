@page "/housekeeping-dashboard"
@attribute [Authorize(Roles = "Housekeeping, Manager")]
@inject APIService ApiService
@inject TicketSignalRService SignalRService

<PageTitle>Housekeeping Dashboard</PageTitle>

<div class="housekeeping-dashboard">
    <div class="dashboard-header">
        <h1>Housekeeping Dashboard</h1>
        <p>Velkommen til housekeeping dashboardet</p>
    </div>

    <div class="dashboard-content">
        @if (_isLoading)
        {
            <p><em>Indlæser opgaver...</em></p>
        }
        else if (_roomsToClean != null)
        {
            <div class="row">
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header">
                            <h3>Dagens Opgaver</h3>
                        </div>
                        <div class="card-body">
                            @if (!_roomsToClean.Any())
                            {
                                <p class="text-center text-muted py-3">Godt arbejde! Der er ingen værelser, der afventer rengøring.</p>
                            }
                            else
                            {
                                <div class="task-list">
                                    @foreach (var room in _roomsToClean)
                                    {
                                        <div class="task-item">
                                            <span class="task-room">Værelse @room.RoomNumber (@room.RoomTypeName)</span>
                                            <button class="btn btn-sm btn-success" @onclick="() => MarkAsClean(room.Id)">
                                                <i class="bi bi-check-lg"></i> Markér som Færdig
                                            </button>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h3>Status Oversigt</h3>
                        </div>
                        <div class="card-body">
                            <div class="status-grid">
                                <div class="status-item">
                                    <div class="status-number">@_roomsToClean.Count</div>
                                    <div class="status-label">Værelser at rengøre</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@code {
    private List<RoomGetDto>? _roomsToClean;
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await SignalRService.StartConnectionAsync(await ApiService.GetAuthTokenAsync());
        SignalRService.OnRoomStatusChanged += HandleRoomStatusChanged;

        await LoadRooms();
        _isLoading = false;
    }

    private async Task LoadRooms()
    {
        _roomsToClean = await ApiService.GetRoomsNeedingCleaningAsync() ?? new List<RoomGetDto>();
        StateHasChanged();
    }

    private async Task MarkAsClean(int roomId)
    {
        var success = await ApiService.MarkRoomAsCleanAsync(roomId);
        if (success)
        {
            _roomsToClean?.RemoveAll(r => r.Id == roomId);
            StateHasChanged();
        }
    }

    private async void HandleRoomStatusChanged(int roomId, string newStatus)
    {
        await LoadRooms();
    }

    public void Dispose()
    {
        SignalRService.OnRoomStatusChanged -= HandleRoomStatusChanged;
    }
}