@page "/housekeeping-dashboard"
@layout MainLayout
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Housekeeping")]
@inject APIService ApiService
@inject NavigationManager Navigation

<PageTitle>Housekeeping Dashboard - Flyhigh</PageTitle>

<div class="housekeeping-dashboard">
    <div class="dashboard-header">
        <h1>Housekeeping Dashboard</h1>
        <p>Velkommen til housekeeping dashboardet</p>
    </div>

    <div class="dashboard-content">
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3>Dagens Opgaver</h3>
                    </div>
                    <div class="card-body">
                        <div class="task-list">
                            <div class="task-item">
                                <span class="task-room">Værelse 101</span>
                                <span class="task-status pending">Afventer rengøring</span>
                            </div>
                            <div class="task-item">
                                <span class="task-room">Værelse 102</span>
                                <span class="task-status pending">Afventer rengøring</span>
                            </div>
                            <div class="task-item">
                                <span class="task-room">Værelse 103</span>
                                <span class="task-status completed">Færdig</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3>Status Oversigt</h3>
                    </div>
                    <div class="card-body">
                        <div class="status-grid">
                            <div class="status-item">
                                <div class="status-number">12</div>
                                <div class="status-label">Værelser at rengøre</div>
                            </div>
                            <div class="status-item">
                                <div class="status-number">8</div>
                                <div class="status-label">Færdige værelser</div>
                            </div>
                            <div class="status-item">
                                <div class="status-number">4</div>
                                <div class="status-label">Afventer inspektion</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3>Hurtige Handlinger</h3>
                    </div>
                    <div class="card-body">
                        <div class="action-buttons">
                            <button class="btn btn-primary" @onclick="MarkRoomClean">Marker værelse som rent</button>
                            <button class="btn btn-warning" @onclick="ReportIssue">Rapporter problem</button>
                            <button class="btn btn-info" @onclick="ViewSchedule">Se dagens skema</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .housekeeping-dashboard {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    .dashboard-header {
        margin-bottom: 30px;
        text-align: center;
    }

    .dashboard-header h1 {
        color: #2c3e50;
        margin-bottom: 10px;
    }

    .card {
        border: none;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        margin-bottom: 20px;
    }

    .card-header {
        background-color: #3498db;
        color: white;
        border-bottom: none;
        padding: 15px 20px;
    }

    .card-header h3 {
        margin: 0;
        font-size: 1.2rem;
    }

    .task-list {
        max-height: 300px;
        overflow-y: auto;
    }

    .task-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 0;
        border-bottom: 1px solid #eee;
    }

    .task-item:last-child {
        border-bottom: none;
    }

    .task-room {
        font-weight: bold;
        color: #2c3e50;
    }

    .task-status {
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: bold;
    }

    .task-status.pending {
        background-color: #f39c12;
        color: white;
    }

    .task-status.completed {
        background-color: #27ae60;
        color: white;
    }

    .status-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 20px;
    }

    .status-item {
        text-align: center;
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 8px;
    }

    .status-number {
        font-size: 2.5rem;
        font-weight: bold;
        color: #3498db;
        margin-bottom: 5px;
    }

    .status-label {
        color: #7f8c8d;
        font-size: 0.9rem;
    }

    .action-buttons {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
    }

    .action-buttons .btn {
        padding: 10px 20px;
        border-radius: 5px;
        border: none;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .action-buttons .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    @@media (max-width: 768px) {
        .action-buttons {
            flex-direction: column;
        }
        
        .action-buttons .btn {
            width: 100%;
        }
    }
</style>

@code {
    private void MarkRoomClean()
    {
        // TODO: Implement room cleaning functionality
        // This would typically call an API endpoint to update room status
    }

    private void ReportIssue()
    {
        // TODO: Implement issue reporting functionality
        // This could open a modal or navigate to an issue reporting page
    }

    private void ViewSchedule()
    {
        // TODO: Implement schedule viewing functionality
        // This could show a detailed schedule for the housekeeping staff
    }
}
