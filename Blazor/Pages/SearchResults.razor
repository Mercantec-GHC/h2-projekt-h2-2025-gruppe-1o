@page "/search-results"
@using DomainModels.DTOs
@using Blazor.Components
@inject APIService ApiService
@inject NavigationManager Navigation

<PageTitle>Søgeresultater - Ledige Værelser</PageTitle>

<div class="page-section">
    <h2 class="section-title">Ledige værelser</h2>

    @if (_isLoading)
    {
        <p class="text-center"><em>Søger efter ledige værelser...</em></p>
    }
    else if (_availableRooms != null && _availableRooms.Any())
    {
        <p class="search-summary">
            Viser resultater for: <strong>@CheckInDate?.ToString("d. MMMM yyyy")</strong> til <strong>@CheckOutDate?.ToString("d. MMMM yyyy")</strong> for <strong>@GuestCount gæster</strong>.
        </p>

        <div class="room-types-grid">
            @foreach (var roomType in _availableRooms)
            {
                <RoomTypeCard RoomType="roomType" OnButtonClicked="ViewRoomDetails" />
            }
        </div>
    }
    else
    {
        <p class="text-center">Der er desværre ingen ledige værelser i den valgte periode. Prøv venligst en anden søgning.</p>
    }
</div>

@code {
    private bool _isLoading = true;
    private List<RoomTypeGetDto> _availableRooms;

    [Parameter]
    [SupplyParameterFromQuery(Name = "checkin")]
    public DateTime? CheckInDate { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "checkout")]
    public DateTime? CheckOutDate { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "guests")]
    public int GuestCount { get; set; } = 1;

    protected override async Task OnInitializedAsync()
    {
        if (CheckInDate.HasValue && CheckOutDate.HasValue)
        {
            _availableRooms = await ApiService.GetAvailableRoomTypesAsync(CheckInDate.Value, CheckOutDate.Value, GuestCount);
        }
        _isLoading = false;
    }

    private void ViewRoomDetails(int roomTypeId)
    {
        var url = $"/room/{roomTypeId}?checkin={CheckInDate:yyyy-MM-dd}&checkout={CheckOutDate:yyyy-MM-dd}&guests={GuestCount}";
        Navigation.NavigateTo(url);
    }
}