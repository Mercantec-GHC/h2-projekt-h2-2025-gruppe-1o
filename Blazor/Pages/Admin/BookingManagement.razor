@page "/admin"
@layout MainLayout
@attribute [Authorize(Roles = "Receptionist, Manager")]
@inject APIService ApiService
@inject TicketSignalRService SignalRService
@inject NavigationManager Navigation
@implements IDisposable

<PageTitle>Management Dashboard</PageTitle>

<div class="container-fluid mt-4">
    <div class="row mb-4">
        <div class="col">
            <h1 class="h3">Management Dashboard</h1>
            <p class="text-muted">Overblik over dagens aktivitet og hotelstatus.</p>
        </div>
    </div>

    @if (_isLoading)
    {
        <p><em>Indlæser data...</em></p>
    }
    else
    {
        @if (_dashboardData != null)
        {
            <div class="row mb-4">
                <div class="col-md-6 col-xl-3 mb-3"><div class="card text-center h-100"><div class="card-body"><i class="bi bi-box-arrow-in-right fs-1 text-primary"></i><h4 class="mt-2">@_dashboardData.TodaysArrivals.Count</h4><p class="text-muted mb-0">Dagens Ankomster</p></div></div></div>
                <div class="col-md-6 col-xl-3 mb-3"><div class="card text-center h-100"><div class="card-body"><i class="bi bi-box-arrow-left fs-1 text-primary"></i><h4 class="mt-2">@_dashboardData.TodaysDepartures.Count</h4><p class="text-muted mb-0">Dagens Afrejser</p></div></div></div>
                <div class="col-md-6 col-xl-3 mb-3"><div class="card text-center h-100"><div class="card-body"><i class="bi bi-door-closed-fill fs-1 text-danger"></i><h4 class="mt-2">@_dashboardData.OccupiedRoomsCount</h4><p class="text-muted mb-0">Optagede Værelser</p></div></div></div>
                <div class="col-md-6 col-xl-3 mb-3"><div class="card text-center h-100"><div class="card-body"><i class="bi bi-door-open-fill fs-1 text-success"></i><h4 class="mt-2">@_dashboardData.AvailableRoomsCount</h4><p class="text-muted mb-0">Ledige Værelser</p></div></div></div>
            </div>
        }

        <div class="card mb-4">
            <div class="card-header">Værelsesoversigt</div>
            <div class="card-body">
                @if (_allRooms == null)
                {
                    <p><em>Indlæser værelser...</em></p>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead><tr><th>Værelse Nr.</th><th>Type</th><th>Status</th><th class="text-end">Handlinger</th></tr></thead>
                            <tbody>
                                @foreach (var room in _allRooms)
                                {
                                    <tr>
                                        <td>@room.RoomNumber</td>
                                        <td>@room.RoomTypeName</td>
                                        <td>@room.Status</td>
                                        <td class="text-end">
                                            <button class="btn btn-sm btn-outline-primary" disabled="@(room.Status == "NeedsCleaning")" @onclick="() => SendForCleaning(room.Id)">
                                                Send til rengøring
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>

        <AuthorizeView Roles="Manager">
            <h2 class="mt-5 mb-3">Manager Oversigt</h2>
            <div class="card mb-4">
                <div class="card-header">Dagens Finansielle Statistik</div>
                <div class="card-body">
                    @if (_stats == null)
                    {
                        <p><em>Indlæser statistik...</em></p>
                    }
                    else
                    {
                        <div class="row">
                            <div class="col-md-6"><p><strong>Belægningsprocent:</strong> @_stats.OccupancyPercentage %</p></div>
                            <div class="col-md-6"><p><strong>Dagens Omsætning:</strong> @_stats.TodaysRevenue.ToString("N0") kr.</p></div>
                        </div>
                    }
                </div>
            </div>
            <div class="card">
                <div class="card-header">Lukkede Support Sager</div>
                <div class="card-body">
                    @if (_closedTickets == null)
                    {
                        <p><em>Indlæser lukkede sager...</em></p>
                    }
                    else if (!_closedTickets.Any())
                    {

                        <p>Ingen lukkede sager fundet.</p>
                    }
                    else
                    {
                        <ul class="list-group list-group-flush">
                            @foreach (var ticket in _closedTickets)
                            {
                                <li class="list-group-item">#@ticket.Id.Substring(0, 6).ToUpper() - @ticket.Title</li>
                            }
                        </ul>
                    }
                </div>
            </div>
        </AuthorizeView>
    }
</div>

@code {
    private bool _isLoading = true;
    private ReceptionistDashboardDto? _dashboardData;
    private List<RoomGetDto>? _allRooms;

    private DailyStatsDto? _stats;
    private List<TicketSummaryDto>? _closedTickets;

    [CascadingParameter]
    private Task<AuthenticationState> AuthStateTask { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;

        var token = await ApiService.GetAuthTokenAsync();
        await SignalRService.StartConnectionAsync(token);
        SignalRService.OnRoomStatusChanged += HandleRoomStatusChanged;

        var dashboardTask = ApiService.GetReceptionistDashboardDataAsync();
        var roomsTask = ApiService.GetAllRoomsAsync();

        var authState = await AuthStateTask;
        var user = authState.User;
        Task<DailyStatsDto?>? statsTask = null;
        Task<List<TicketSummaryDto>?>? closedTicketsTask = null;

        if (user.IsInRole("Manager"))
        {
            statsTask = ApiService.GetDashboardStatsAsync();
            closedTicketsTask = ApiService.GetClosedTicketsForMyRoleAsync();
        }

        await Task.WhenAll(dashboardTask, roomsTask);
        _dashboardData = await dashboardTask;
        _allRooms = await roomsTask ?? new();

        if (statsTask != null && closedTicketsTask != null)
        {
            await Task.WhenAll(statsTask, closedTicketsTask);
            _stats = await statsTask;
            _closedTickets = await closedTicketsTask ?? new();
        }

        _isLoading = false;
    }

    private async Task SendForCleaning(int roomId)
    {
        var success = await ApiService.RequestRoomCleaningAsync(roomId);
        if (success)
        {
            var room = _allRooms?.FirstOrDefault(r => r.Id == roomId);
            if (room != null)
            {
                room.Status = "NeedsCleaning";
                StateHasChanged();
            }
        }
    }

    private async void HandleRoomStatusChanged(int roomId, string newStatus)
    {
        var room = _allRooms?.FirstOrDefault(r => r.Id == roomId);
        if (room != null)
        {
            room.Status = newStatus;
            await InvokeAsync(StateHasChanged);
        }
    }

    public void Dispose()
    {
        SignalRService.OnRoomStatusChanged -= HandleRoomStatusChanged;
    }
}