@inject NavigationManager Navigation
@inject APIService ApiService

<header class="staff-header">
    <div class="staff-header-content">
        <div class="staff-header-left">
            <a href="/admin" class="staff-logo">
                <div class="staff-logo-icon">F</div>
                <span>Flyhigh</span>
            </a>
        </div>

        <nav class="staff-header-nav">
            <AuthorizeView>
                <Authorized>
                    <AuthorizeView Roles="Manager, Receptionist" Context="adminContext">
                        <NavLink href="/admin" class="staff-nav-link">Dashboard</NavLink>
                        <NavLink href="/admin/administration" class="staff-nav-link">Administration</NavLink>
                    </AuthorizeView>

                    <AuthorizeView Roles="Housekeeping" Context="housekeepingContext">
                        <NavLink href="/housekeeping-dashboard" class="staff-nav-link">Housekeeping</NavLink>
                    </AuthorizeView>
                </Authorized>
            </AuthorizeView>
        </nav>

        <div class="staff-header-right">
            <AuthorizeView>
                <Authorized>
                    <button class="btn btn-outline-light" @onclick="LogoutClicked">Log ud</button>
                </Authorized>
            </AuthorizeView>
        </div>
    </div>
</header>

@code {
    private async Task LogoutClicked()
    {
        await ApiService.LogoutAsync();
        // Send brugeren til forsiden efter logud
        Navigation.NavigateTo("/", forceLoad: true);
    }
}